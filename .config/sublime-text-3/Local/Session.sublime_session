{
	"folder_history":
	[
		"/home/brainfuck/Desktop/anubis",
		"/home/brainfuck/programming/projects/src_github/EggShell",
		"/home/brainfuck/programming/projects/anubis",
		"/home/brainfuck/.config/xfce4/xfconf/xfce-perchannel-xml",
		"/home/brainfuck/programming/projects/python_rat/src_from_github/Turtle",
		"/home/brainfuck/programming/projects/python_rat/anubis-v0.1-dev_20170911a",
		"/home/brainfuck/programming/projects/rat_examples/Turtle",
		"/home/brainfuck/programming/projects/rat_examples/Turtle/Multiple_Clients",
		"/home/brainfuck/programming/projects/rat_examples/EggShell",
		"/home/brainfuck/Desktop/anubis-v0.1-dev_20170910b",
		"/home/brainfuck/programming/projects/anubis-v0.1-dev_20170909a",
		"/home/brainfuck/Desktop/file_transfer",
		"/home/brainfuck/programming/projects/rat_examples/Stitch",
		"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a",
		"/home/brainfuck/programming/projects/file_transfer",
		"/home/brainfuck/Desktop",
		"/home/brainfuck/Desktop/file_transfer_client_server",
		"/home/brainfuck/Desktop/anubis-v0.1-dev_20170906a",
		"/home/brainfuck/programming/projects/rat_examples/pupy",
		"/home/brainfuck/programming/programming_languages/python/src/chunks/file_transfer_client_server",
		"/home/brainfuck/programming/projects/strongpass-v3.5",
		"/opt/vpn/nordvpn",
		"/home/brainfuck/programming/projects/rat-dev/anubis",
		"/home/brainfuck/programming/projects/rat-dev/rat_examples/pupy/pupy",
		"/home/brainfuck/programming/projects/RAT-dev/anubis",
		"/home/brainfuck/programming/projects/webslayer-dev/wfuzz",
		"/home/brainfuck/programming/projects/webslayer-dev/webslayer",
		"/home/brainfuck/programming/projects/webslayer-dev/webslayer2",
		"/home/brainfuck/programming/projects/webslayer-dev",
		"/home/brainfuck/programming/projects/webslayer",
		"/home/brainfuck/programming/projects/webslayer2",
		"/home/brainfuck/Desktop/kalitorify",
		"/home/brainfuck/programming/projects/archtorify-dev",
		"/home/brainfuck/.config/xfce4/terminal",
		"/home/brainfuck/programming/projects/kalitorify-dev",
		"/home/brainfuck/programming/projects/RAT-dev/Turtle",
		"/home/brainfuck/programming/git/kalitorify",
		"/home/brainfuck/Desktop/zathurarc",
		"/home/brainfuck/programming/projects",
		"/home/brainfuck/programming/programming_languages/cpp/cpp_course/src",
		"/home/brainfuck/downloads",
		"/home/brainfuck/programming/projects/archtorify-v1.8.3-dev",
		"/home/brainfuck/programming/projects/RAT-dev",
		"/home/brainfuck/programming/projects/kalitorify-v1.7.2-dev",
		"/home/brainfuck/Desktop/Turtle",
		"/home/brainfuck/programming/projects/Turtle-dev/Turtle",
		"/home/brainfuck/programming/projects/Turtle-dev",
		"/home/brainfuck/programming/projects/kalitorify-v1.7.1-dev",
		"/home/brainfuck/programming/other_projects/user_js_firefox",
		"/home/brainfuck/programming/projects/Turtle",
		"/home/brainfuck/programming/projects/Turtle/Turtle-stable",
		"/home/brainfuck/programming/projects/archtorify-v1.8.0-dev",
		"/home/brainfuck/programming/projects/kalitorify-v1.5.0",
		"/home/brainfuck/programming/projects/kalitorify-v1.6.1-dev",
		"/home/brainfuck/Programming/Python/Devel/Turtle-stable",
		"/home/brainfuck/Desktop/Turtle-stable",
		"/home/brainfuck/Programming/Bash/Devel/kalitorify-v1.5.1-dev",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/Turtle-dev",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/Turtle-v0.1.1-dev",
		"/home/brainfuck/Desktop/Programmazione/Bash/Devel/archtorify-v1.7.0",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/Turtle-v0.1.1",
		"/home/brainfuck/Desktop/Programmazione/Bash/chunks",
		"/home/brainfuck/Desktop/Programmazione/Bootstrap/brainfuck.org",
		"/home/brainfuck/Desktop/Programmazione/Bootstrap",
		"/home/brainfuck/Desktop/Programmazione/Bash/Devel/kalitorify-v1.5.0",
		"/home/brainfuck/Desktop/Programmazione/Bash/ubuntu-post-install",
		"/home/brainfuck/Desktop/Programmazione/Bash/Devel/kali-os-script",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/Turtle",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/savu",
		"/home/brainfuck/Desktop/Programmazione/Bootstrap/Themes",
		"/home/brainfuck/Desktop/Programmazione/Bootstrap/bootstrap-examples",
		"/home/brainfuck/Desktop/Programmazione/Bootstrap/nerdchic.org",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/zero",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/chaos",
		"/home/brainfuck/Desktop/Programmazione",
		"/home/brainfuck/Desktop/Programmazione/Python",
		"/home/brainfuck/Desktop/Programmazione/Python/Devel/aescrypt",
		"/home/brainfuck/Desktop/GIT",
		"/home/brainfuck/Desktop/Programmazione/C/prism-neo",
		"/home/brainfuck/Madness/Programs-Sources/C#",
		"/home/brainfuck/Desktop/Programmazione/Bash/archtorify-v1.5.2-dev",
		"/home/brainfuck/Desktop/Studio/Reverse Engineering",
		"/home/brainfuck/Desktop/Studio/Reverse Engineering/sources",
		"/home/brainfuck/Desktop/Programmazione/C",
		"/home/brainfuck/Desktop/Programmazione/C/Unix - Client-Server"
	],
	"last_version": 3144,
	"last_window_id": 203,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ms",
						"msg_4"
					],
					[
						"msg",
						"msg_4"
					],
					[
						"sess",
						"session_time"
					],
					[
						"mul",
						"multiprocessing\tmodule"
					],
					[
						"ta",
						"task_done"
					],
					[
						"co",
						"continue"
					],
					[
						"thr",
						"threading"
					],
					[
						"scr",
						"screen_lock"
					],
					[
						"poms",
						"poms_cycle"
					],
					[
						"start",
						"start_anubis\tfunction"
					],
					[
						"th",
						"threads"
					],
					[
						"win",
						"windows_persistence\tfunction"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"__",
						"__main__\t(client.py)"
					],
					[
						"rempo",
						"remotepath"
					],
					[
						"down",
						"download_file"
					],
					[
						"download",
						"download_file\t(download.py)"
					],
					[
						"ch",
						"chunk_size"
					],
					[
						"dir",
						"dir_or_file"
					],
					[
						"exp",
						"expanduser\t(filedialog.py)"
					],
					[
						"fi",
						"file_send"
					],
					[
						"file",
						"file_name"
					],
					[
						"ask",
						"askopenfilename\tfunction"
					],
					[
						"da",
						"data_dir"
					],
					[
						"fil",
						"file_name"
					],
					[
						"SOC",
						"SOCK_STREAM\tinstance"
					],
					[
						"f",
						"f_req"
					],
					[
						"SOCK",
						"SOCK_STREAM\tinstance"
					],
					[
						"u",
						"upload_dest"
					],
					[
						"se",
						"sendall\tfunction"
					],
					[
						"wr",
						"write\tfunction"
					],
					[
						"filen",
						"filename"
					],
					[
						"out",
						"out_bytes"
					],
					[
						"Downl",
						"Download"
					],
					[
						"cl",
						"close"
					],
					[
						"get",
						"getcwd\t(client.py)"
					],
					[
						"e",
						"environ"
					],
					[
						"tm",
						"tmp_dir"
					],
					[
						"fiel",
						"file_name〔variable〕"
					],
					[
						"sen",
						"sendall\t(socket_file.py)"
					],
					[
						"st",
						"store_true"
					],
					[
						"print",
						"print_usage〔function〕"
					],
					[
						"gen",
						"gen_pass"
					],
					[
						"gene",
						"generate_passwords"
					],
					[
						"le",
						"lenght"
					],
					[
						"arg",
						"argparse"
					],
					[
						"ge",
						"generate_passwords"
					],
					[
						"St",
						"StrongPassword"
					],
					[
						"geen",
						"generate_passwords〔function〕"
					],
					[
						"exclude",
						"excluded_chars"
					],
					[
						"def",
						"def\tFunction"
					],
					[
						"secre",
						"secrets〔module〕"
					],
					[
						"K",
						"KeyboardInterrupt〔class〕"
					],
					[
						"job",
						"job_num"
					],
					[
						"str",
						"strt"
					],
					[
						"strin",
						"string_strip"
					],
					[
						"exec",
						"except"
					],
					[
						"decode",
						"decodestring〔function〕"
					],
					[
						"enco",
						"encoder"
					],
					[
						"res",
						"result"
					],
					[
						"url",
						"urllib"
					],
					[
						"rest",
						"restoreOverrideCursor\t(highLighter.py)"
					],
					[
						"re",
						"rehighlight"
					],
					[
						"QC",
						"QCursor\t(highLighter.py)"
					],
					[
						"set",
						"setCurrentBlockState\t(highLighter.py)"
					],
					[
						"form",
						"format"
					],
					[
						"text",
						"text_lenght"
					],
					[
						"setFon",
						"setFontItalic\t(highLighter.py)"
					],
					[
						"setF",
						"setFontWeight\t(highLighter.py)"
					],
					[
						"Q",
						"QColor\t(highLighter.py)"
					],
					[
						"setFo",
						"setForeground\t(highLighter.py)"
					],
					[
						"stat",
						"staticmethod\t(highLighter.py)"
					],
					[
						"C",
						"CaseInsensitive"
					],
					[
						"html",
						"html_close"
					],
					[
						"Py",
						"PythonHighlighter"
					],
					[
						"std",
						"stdout〔variable〕"
					],
					[
						"curr",
						"current_depth"
					],
					[
						"hi",
						"hide_codes"
					],
					[
						"more",
						"more_requests"
					],
					[
						"set_",
						"set_url"
					],
					[
						"rh",
						"rhtemp"
					],
					[
						"pay",
						"payload"
					],
					[
						"ha",
						"has_header"
					],
					[
						"http",
						"http_code"
					],
					[
						"ht",
						"http_code"
					],
					[
						"request",
						"request_generator"
					],
					[
						"reqt",
						"request_generator"
					],
					[
						"current",
						"current_depth"
					],
					[
						"clea",
						"clear_line"
					],
					[
						"hide",
						"hide_codes"
					],
					[
						"spli",
						"splitted"
					],
					[
						"en",
						"encodings"
					],
					[
						"sele",
						"select_encoding"
					],
					[
						"enc",
						"encodings"
					],
					[
						"hexa",
						"hexa-rand"
					],
					[
						"dictio",
						"dictionary"
					],
					[
						"payload_hex",
						"payload_hexrand\t(wfuzz.py)"
					],
					[
						"dict",
						"dict_1"
					],
					[
						"hexa-",
						"hexa-range"
					],
					[
						"qu",
						"query_words"
					],
					[
						"opt",
						"optlist"
					],
					[
						"curren",
						"current_depth\t(wfuzz.py)"
					],
					[
						"new",
						"new_request"
					],
					[
						"hide_",
						"hide_chars"
					],
					[
						"depe",
						"dependencies\t(archtorify.sh)"
					],
					[
						"backu",
						"backup_dir"
					],
					[
						"mac",
						"mac_reset"
					],
					[
						"P",
						"PROGRAM_NAME"
					],
					[
						"ma",
						"mac_change"
					],
					[
						"ho",
						"hostname_change"
					],
					[
						"ra",
						"random_hostname"
					],
					[
						"ipt",
						"iptables.backup"
					],
					[
						"ba",
						"backup_dir"
					],
					[
						"entry",
						"entry_guards"
					],
					[
						"entr",
						"entry_guards"
					],
					[
						"chec",
						"check_root"
					],
					[
						"PRO",
						"PROGRAM_DIR"
					],
					[
						"LI",
						"LICENSE_DIR"
					],
					[
						"la",
						"last_version"
					],
					[
						"check",
						"check_installed"
					],
					[
						"fina",
						"final_line"
					],
					[
						"wind",
						"windows_code"
					],
					[
						"code",
						"code_color"
					],
					[
						"ne",
						"new_req"
					],
					[
						"threa",
						"threads_list"
					],
					[
						"nre",
						"nresponse"
					],
					[
						"genreq",
						"generate_request"
					],
					[
						"resp",
						"resp_headers"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 320.0,
				"last_filter": "Package Control: ",
				"selected_items":
				[
					[
						"Package Control: ",
						"Package Control: List Packages"
					],
					[
						"gu",
						"SublimeLinter: Choose Gutter Theme"
					],
					[
						"Sublime",
						"SublimeLinter: Choose Gutter Theme"
					],
					[
						"sublimelinter lint mode",
						"SublimeLinter: Choose Lint Mode"
					],
					[
						"PackageR",
						"PackageResourceViewer: Open Resource"
					],
					[
						"PackageResourceViewer: Open Resource",
						"PackageResourceViewer: Open Resource"
					],
					[
						"Snippet: ba",
						"Snippet: Bash header"
					],
					[
						"Snippet: py",
						"Snippet: python-header"
					],
					[
						"Snippet: ",
						"Snippet: if __name__ == '__main__'"
					],
					[
						"Package Control",
						"Package Control: Install Package"
					],
					[
						"Package Contr",
						"Package Control: Install Package"
					]
				],
				"width": 453.0
			},
			"console":
			{
				"height": 275.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					" import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/brainfuck/programming/git/kalitorify/kalitorify.sh",
				"/home/brainfuck/programming/projects/src_github/EggShell/modules/server/server.py",
				"/home/brainfuck/programming/projects/src_github/EggShell/eggshell.py",
				"/home/brainfuck/Desktop/anubis/server.py",
				"/home/brainfuck/programming/projects/anubis/server.py",
				"/home/brainfuck/programming/programming_languages/bash/src/pomodoro.sh",
				"/home/brainfuck/.config/sublime-text-3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
				"/home/brainfuck/Desktop/i3-reserved.txt",
				"/home/brainfuck/ricing/dotfiles/dotfiles_kali_linux/.config/rofi/config",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/server/server.py",
				"/home/brainfuck/programming/projects/file_transfer/client.py",
				"/home/brainfuck/programming/projects/file_transfer/server.py",
				"/home/brainfuck/programming/projects/anubis-v0.1-dev_20171009a/docs/TODO_list.md",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/modules/testone.py",
				"/home/brainfuck/programming/programming_languages/python/cryptography/cryptotool-v1.1/src/cryptotool.py",
				"/home/brainfuck/programming/programming_languages/python/cryptography/cryptotool-v1.1/src/modules/hashes/md5Hash.py",
				"/home/brainfuck/programming/git/strongpass/strongpass.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/server.py",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/TODO_list.md",
				"/home/brainfuck/programming/projects/anubis-v0.1-dev_20170906a/server.py",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/client.py",
				"/home/brainfuck/programming/projects/rat_examples/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Python/Completion Rules.tmPreferences",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/Python.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/sublime_jedi.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Compare Side-By-Side/SBSCompare.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SBSCompare.sublime-settings",
				"/home/brainfuck/bin/pomodoro",
				"/home/brainfuck/Desktop/file_transfer/client.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/eggshell.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/shell/shell.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/commands/macOS/macos_download.py",
				"/home/brainfuck/Desktop/file_transfer/testonetosend.mp3",
				"/home/brainfuck/programming/programming_languages/python/src/file_transfer_client_server/server.py",
				"/home/brainfuck/programming/programming_languages/python/src/file_transfer_client_server/client.py",
				"/home/brainfuck/Desktop/file_transfer_client_server/client.py",
				"/home/brainfuck/Desktop/file_transfer_client_server/server.py",
				"/home/brainfuck/Desktop/woof.py",
				"/home/brainfuck/Desktop/anubis/TODO_list.md",
				"/home/brainfuck/Desktop/get_file/server.py",
				"/home/brainfuck/Desktop/get_file/client.py",
				"/home/brainfuck/Desktop/pomodoros.txt",
				"/home/brainfuck/Desktop/Turtle/Multiple_Clients/client.py",
				"/home/brainfuck/Desktop/Turtle/Single_Client/client.py",
				"/home/brainfuck/Desktop/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/Desktop/testone_da_inviare.txt",
				"/home/brainfuck/programming/programming_languages/python/src/File.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
				"/home/brainfuck/programming/programming_languages/python/sending-a-file-over-tcp-sockets-in-python.pdf",
				"/home/brainfuck/programming/programming_languages/python/src/chunks/File.py",
				"/home/brainfuck/programming/projects/rat_examples/Stitch/PyLib/download.py",
				"/home/brainfuck/.codeintel/README.txt",
				"/home/brainfuck/programming/programming_languages/python/src/chunks/socket_file.py",
				"/home/brainfuck/programming/projects/i3-config/rofi/config",
				"/home/brainfuck/programming/git/i3-config/i3/i3blocks.conf",
				"/home/brainfuck/programming/git/i3-config/i3/config",
				"/home/brainfuck/programming/git/i3-config/README.md",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.bash_profile",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.config/cherrytree/config.cfg",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.bash_aliases",
				"/home/brainfuck/.config/zathura/zathurarc",
				"/home/brainfuck/Desktop/anubis/README.md",
				"/home/brainfuck/programming/projects/anubis/client.py",
				"/home/brainfuck/Desktop/OSINT-Resources.md",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/bash-header.sublime-snippet",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/python-header.sublime-snippet",
				"/home/brainfuck/Desktop/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-v3.5/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.5-dev/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.4.2/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.2.1/strongpass.py",
				"/home/brainfuck/programming/projects/rat-dev/anubis/client.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/Turtle/Multiple_Clients/client.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/pupy/pupy/pupylib/PupyServer.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/pupy/pupy/pupysh.py",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Stitch/Application/stitch_cmd.py",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Stitch/main.py",
				"/home/brainfuck/programming/git/archtorify/archtorify.sh",
				"/home/brainfuck/programming/git/kalieraser/kalieraser.sh",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/cryptotool-v1.1/src/modules/hashes/sha256Hash.py",
				"/home/brainfuck/downloads/nordvpn/user_pass.txt",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/payloads.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/HighLighter.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/highLighter.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/TextParser.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/TextParser.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/dictio.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/dictio.py",
				"/home/brainfuck/programming/projects/webslayer/payloads.py",
				"/home/brainfuck/programming/projects/webslayer/wfuzz.py",
				"/home/brainfuck/bin/rsync-backup",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/cryptotool-v1.1/src/cryptotool.py",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/hashtool-v0.7.0/hashtool.py",
				"/home/brainfuck/programming/projects/RAT-dev/Turtle/turtle.py",
				"/home/brainfuck/programming/dotfiles/dotfiles_void_linux/openbox/.config/openbox/autostart",
				"/home/brainfuck/programming/dotfiles/conky/conky_examples/11-conky.conf",
				"/home/brainfuck/Desktop/kalitorify/kalitorify.sh",
				"/home/brainfuck/Desktop/kalitorify/README.md",
				"/home/brainfuck/Desktop/kalitorify/Makefile",
				"/home/brainfuck/programming/projects/archtorify-dev/archtorify.sh",
				"/home/brainfuck/programming/projects/archtorify-dev/Makefile",
				"/home/brainfuck/programming/projects/kalitorify-dev/README.md",
				"/home/brainfuck/Desktop/anonsurf-master/Makefile",
				"/home/brainfuck/programming/programming_languages/bash/src/lib/mac_change.sh",
				"/home/brainfuck/Desktop/mac_change.sh",
				"/home/brainfuck/.config/xfce4/terminal/terminalrc",
				"/home/brainfuck/programming/projects/kalitorify-dev/kalitorify.sh",
				"/home/brainfuck/downloads/Surfn-master/README.md",
				"/home/brainfuck/shared/terminalrc",
				"/home/brainfuck/Desktop/change_hostname.sh",
				"/home/brainfuck/Desktop/anonsurf-master/anonsurf.sh",
				"/home/brainfuck/Desktop/anonsurf-master/torrc",
				"/home/brainfuck/Desktop/anonsurf-master/exitnode-selector",
				"/home/brainfuck/Desktop/anonsurf-master/exitnodes.csv",
				"/home/brainfuck/programming/git/kalitorify/README.md",
				"/home/brainfuck/Desktop/testone.sh",
				"/home/brainfuck/documents/guides/Arch-Linux-Installazione/Arch_Linux_Post_Installazione.txt",
				"/home/brainfuck/documents/guides/Arch-Linux-Installazione/Arch-Linux-02 - Configurazione.txt",
				"/home/brainfuck/Desktop/superfunk-conkyrc",
				"/home/brainfuck/programming/config_files/dots/conky-examples/conky.config",
				"/home/brainfuck/Desktop/bash-configs/debian-kali-linux/user/bashrc",
				"/home/brainfuck/programming/config_files/my_dots/void-linux-config/openbox/autostart",
				"/home/brainfuck/Desktop/sublime.settings",
				"/home/brainfuck/Desktop/sublime-settings"
			],
			"find":
			{
				"height": 54.0
			},
			"find_in_files":
			{
				"height": 136.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"accept_connections",
					"multiServerInteract",
					"multiServerListSessions",
					"Thread",
					"work",
					"create_workers()",
					"download",
					"except OSError as error:",
					"Legge dei Piccoli",
					"white",
					"#2277a3",
					"ebf8ff",
					"a7d8ef",
					"#9fcee4",
					"#98c5da",
					"#8db6ca",
					"#a2d0e7",
					"#99c4da",
					"#92bcd0",
					"#84aabd",
					"#7ea2b4",
					"73a2b5",
					"Roboto 8",
					"Terminus 9",
					"accept_connections",
					"serverHost",
					"cmdloop()",
					"anubis",
					"dog",
					"Queue",
					"queue",
					"enumerate",
					"turtle",
					"queue",
					"Queue()",
					"NUMBER_OF_THREADS",
					"strip",
					"enp0s25",
					"@payload",
					"encd",
					"dictionary",
					"request_generator",
					"launch",
					"request",
					"request_",
					"rh",
					"addHeader",
					"add_HEADER",
					"addHeader",
					"addPostdata",
					"request",
					"encoding",
					"'false'",
					"'true'",
					"no",
					"yes",
					"VERSION",
					"PROGRAM",
					"GIT_URL",
					"AUTHOR",
					"VERSION",
					"Abel",
					"wlan0",
					"gmnterm",
					" \n",
					"hide_chars",
					"hidechars",
					"hidewords",
					"hidelines",
					"hidecodes",
					"new_req",
					"line",
					"generate_request",
					"Request()",
					"rawrequest",
					"raw_req",
					"rawrequest",
					"GET",
					"You",
					".mp4",
					"checkip",
					"%-14s",
					"%-20s",
					"yellow",
					"client-id",
					"list_connections",
					"bcol",
					"bcolors",
					"srm",
					"\n time\nimport sys\nimport socket\nimport subprocess\nimport threading\nimport struct\nimport signal\nfrom queue import Queue\nfrom termcolor import colored as color\n\n\n# program info\n_AUTHOR = \"Brainfuck\"\n_VERSION = \"0.2.0\"\n\n\"\"\" Set threads and queue for manage multiple clients on server\n",
					"\n ",
					"import",
					"error",
					"sync",
					"B",
					"[F",
					"[E",
					"[D",
					"[C",
					"[B",
					"[A",
					"A",
					"self.socket.send",
					"quit_gracefully",
					"archtorify",
					"stop",
					"Google",
					"01-29",
					"Failed",
					"[ failed ]",
					"2.4.1",
					"stop",
					"OK",
					"failed",
					"1.6.5",
					"md5",
					"shut",
					"failed",
					"header",
					"jpg",
					"page",
					"page-",
					"page-scroll",
					"page",
					"#",
					"page-top",
					".full",
					"full"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"except OSError as err:",
					"Legge di Little",
					"#1f6b93",
					"ffffff",
					"ade0f8",
					"#a7d8ef",
					"#9fcee4",
					"#98c5da",
					"#8db6ca",
					"#a2d0e7",
					"#99c4da",
					"#92bcd0",
					"#84aabd",
					"84aabd",
					"Roboto 9",
					"Roboto 8",
					"requestGenerator",
					"false",
					"true,",
					"'false',",
					"'true',",
					"version",
					"program",
					"git_url",
					"author",
					"version",
					"Terminus",
					"enp2s8",
					"Terminus",
					"hide_chars",
					"hide_words",
					"hide_lines",
					"hide_codes",
					"new_request",
					"%-12s",
					"%-14s",
					"enum_listening",
					"col",
					"color",
					"bcol",
					"kalitorify",
					"[FAILED]",
					"2.4.2-dev",
					"FAILED",
					"1.7.0",
					"lol",
					"IFS=$' '",
					"January 2017",
					"color1",
					"teal",
					"color1",
					"package",
					"green",
					"blue",
					"yellow",
					"green",
					"red",
					"#009688",
					"#607d8b",
					"#009688",
					"rgba(0,150,136,0.7)",
					"#2196f3",
					"#64b5f6",
					"#42a5f5",
					"\"",
					"24",
					"arial",
					"monospace",
					"terminus",
					"#ECEFF1",
					"#455A64",
					"#ECEFF1",
					"#2A373E",
					"#3E515A",
					"#b0bec5",
					"#78909c",
					"#00bcd4",
					"#4dd0e1",
					"#80cbc4",
					"#4db6ac",
					"#80cbc4",
					"#26a69a",
					"#26c6da",
					"#00acc1",
					"#4fc3f7",
					"#0277bd",
					"#00b3b3",
					"#003333",
					"#008080",
					"#004d4d",
					"#008080",
					"#00b3b3",
					"#cccccc",
					"#00cc00",
					"grey",
					"lightgrey",
					"#8e9aa4",
					"#65737e",
					"#ce4bc1",
					"#b431a7",
					"#77216f",
					"#2c001e",
					"#61afef",
					".",
					"°",
					"",
					"remote_addr",
					"portno",
					"{white}",
					"{endc}",
					"{green}",
					"{cyan}",
					"printf",
					"Times New Roman",
					"Tahoma",
					"/home/$username/backups",
					"enp0s25",
					"white",
					"light grey",
					"#E6E6E6",
					"#98D1CE",
					"white",
					"endc",
					"/"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": true,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 80.0
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"output.markdown":
			{
				"height": 144.0
			},
			"output.unsaved_changes":
			{
				"height": 138.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 94.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"core.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 159.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"ms",
						"msg_4"
					],
					[
						"msg",
						"msg_4"
					],
					[
						"sess",
						"session_time"
					],
					[
						"mul",
						"multiprocessing\tmodule"
					],
					[
						"ta",
						"task_done"
					],
					[
						"co",
						"continue"
					],
					[
						"thr",
						"threading"
					],
					[
						"scr",
						"screen_lock"
					],
					[
						"poms",
						"poms_cycle"
					],
					[
						"start",
						"start_anubis\tfunction"
					],
					[
						"th",
						"threads"
					],
					[
						"win",
						"windows_persistence\tfunction"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"__",
						"__main__\t(client.py)"
					],
					[
						"rempo",
						"remotepath"
					],
					[
						"down",
						"download_file"
					],
					[
						"download",
						"download_file\t(download.py)"
					],
					[
						"ch",
						"chunk_size"
					],
					[
						"dir",
						"dir_or_file"
					],
					[
						"exp",
						"expanduser\t(filedialog.py)"
					],
					[
						"fi",
						"file_send"
					],
					[
						"file",
						"file_name"
					],
					[
						"ask",
						"askopenfilename\tfunction"
					],
					[
						"da",
						"data_dir"
					],
					[
						"fil",
						"file_name"
					],
					[
						"SOC",
						"SOCK_STREAM\tinstance"
					],
					[
						"f",
						"f_req"
					],
					[
						"SOCK",
						"SOCK_STREAM\tinstance"
					],
					[
						"u",
						"upload_dest"
					],
					[
						"se",
						"sendall\tfunction"
					],
					[
						"wr",
						"write\tfunction"
					],
					[
						"filen",
						"filename"
					],
					[
						"out",
						"out_bytes"
					],
					[
						"Downl",
						"Download"
					],
					[
						"cl",
						"close"
					],
					[
						"get",
						"getcwd\t(client.py)"
					],
					[
						"e",
						"environ"
					],
					[
						"tm",
						"tmp_dir"
					],
					[
						"fiel",
						"file_name〔variable〕"
					],
					[
						"sen",
						"sendall\t(socket_file.py)"
					],
					[
						"st",
						"store_true"
					],
					[
						"print",
						"print_usage〔function〕"
					],
					[
						"gen",
						"gen_pass"
					],
					[
						"gene",
						"generate_passwords"
					],
					[
						"le",
						"lenght"
					],
					[
						"arg",
						"argparse"
					],
					[
						"ge",
						"generate_passwords"
					],
					[
						"St",
						"StrongPassword"
					],
					[
						"geen",
						"generate_passwords〔function〕"
					],
					[
						"exclude",
						"excluded_chars"
					],
					[
						"def",
						"def\tFunction"
					],
					[
						"secre",
						"secrets〔module〕"
					],
					[
						"K",
						"KeyboardInterrupt〔class〕"
					],
					[
						"job",
						"job_num"
					],
					[
						"str",
						"strt"
					],
					[
						"strin",
						"string_strip"
					],
					[
						"exec",
						"except"
					],
					[
						"decode",
						"decodestring〔function〕"
					],
					[
						"enco",
						"encoder"
					],
					[
						"res",
						"result"
					],
					[
						"url",
						"urllib"
					],
					[
						"rest",
						"restoreOverrideCursor\t(highLighter.py)"
					],
					[
						"re",
						"rehighlight"
					],
					[
						"QC",
						"QCursor\t(highLighter.py)"
					],
					[
						"set",
						"setCurrentBlockState\t(highLighter.py)"
					],
					[
						"form",
						"format"
					],
					[
						"text",
						"text_lenght"
					],
					[
						"setFon",
						"setFontItalic\t(highLighter.py)"
					],
					[
						"setF",
						"setFontWeight\t(highLighter.py)"
					],
					[
						"Q",
						"QColor\t(highLighter.py)"
					],
					[
						"setFo",
						"setForeground\t(highLighter.py)"
					],
					[
						"stat",
						"staticmethod\t(highLighter.py)"
					],
					[
						"C",
						"CaseInsensitive"
					],
					[
						"html",
						"html_close"
					],
					[
						"Py",
						"PythonHighlighter"
					],
					[
						"std",
						"stdout〔variable〕"
					],
					[
						"curr",
						"current_depth"
					],
					[
						"hi",
						"hide_codes"
					],
					[
						"more",
						"more_requests"
					],
					[
						"set_",
						"set_url"
					],
					[
						"rh",
						"rhtemp"
					],
					[
						"pay",
						"payload"
					],
					[
						"ha",
						"has_header"
					],
					[
						"http",
						"http_code"
					],
					[
						"ht",
						"http_code"
					],
					[
						"request",
						"request_generator"
					],
					[
						"reqt",
						"request_generator"
					],
					[
						"current",
						"current_depth"
					],
					[
						"clea",
						"clear_line"
					],
					[
						"hide",
						"hide_codes"
					],
					[
						"spli",
						"splitted"
					],
					[
						"en",
						"encodings"
					],
					[
						"sele",
						"select_encoding"
					],
					[
						"enc",
						"encodings"
					],
					[
						"hexa",
						"hexa-rand"
					],
					[
						"dictio",
						"dictionary"
					],
					[
						"payload_hex",
						"payload_hexrand\t(wfuzz.py)"
					],
					[
						"dict",
						"dict_1"
					],
					[
						"hexa-",
						"hexa-range"
					],
					[
						"qu",
						"query_words"
					],
					[
						"opt",
						"optlist"
					],
					[
						"curren",
						"current_depth\t(wfuzz.py)"
					],
					[
						"new",
						"new_request"
					],
					[
						"hide_",
						"hide_chars"
					],
					[
						"depe",
						"dependencies\t(archtorify.sh)"
					],
					[
						"backu",
						"backup_dir"
					],
					[
						"mac",
						"mac_reset"
					],
					[
						"P",
						"PROGRAM_NAME"
					],
					[
						"ma",
						"mac_change"
					],
					[
						"ho",
						"hostname_change"
					],
					[
						"ra",
						"random_hostname"
					],
					[
						"ipt",
						"iptables.backup"
					],
					[
						"ba",
						"backup_dir"
					],
					[
						"entry",
						"entry_guards"
					],
					[
						"entr",
						"entry_guards"
					],
					[
						"chec",
						"check_root"
					],
					[
						"PRO",
						"PROGRAM_DIR"
					],
					[
						"LI",
						"LICENSE_DIR"
					],
					[
						"la",
						"last_version"
					],
					[
						"check",
						"check_installed"
					],
					[
						"fina",
						"final_line"
					],
					[
						"wind",
						"windows_code"
					],
					[
						"code",
						"code_color"
					],
					[
						"ne",
						"new_req"
					],
					[
						"threa",
						"threads_list"
					],
					[
						"nre",
						"nresponse"
					],
					[
						"genreq",
						"generate_request"
					],
					[
						"resp",
						"resp_headers"
					]
				]
			},
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 320.0,
				"last_filter": "Package Control: ",
				"selected_items":
				[
					[
						"Package Control: ",
						"Package Control: List Packages"
					],
					[
						"gu",
						"SublimeLinter: Choose Gutter Theme"
					],
					[
						"Sublime",
						"SublimeLinter: Choose Gutter Theme"
					],
					[
						"sublimelinter lint mode",
						"SublimeLinter: Choose Lint Mode"
					],
					[
						"PackageR",
						"PackageResourceViewer: Open Resource"
					],
					[
						"PackageResourceViewer: Open Resource",
						"PackageResourceViewer: Open Resource"
					],
					[
						"Snippet: ba",
						"Snippet: Bash header"
					],
					[
						"Snippet: py",
						"Snippet: python-header"
					],
					[
						"Snippet: ",
						"Snippet: if __name__ == '__main__'"
					],
					[
						"Package Control",
						"Package Control: Install Package"
					],
					[
						"Package Contr",
						"Package Control: Install Package"
					]
				],
				"width": 453.0
			},
			"console":
			{
				"height": 275.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					" import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/brainfuck/programming/git/kalitorify/kalitorify.sh",
				"/home/brainfuck/programming/projects/src_github/EggShell/modules/server/server.py",
				"/home/brainfuck/programming/projects/src_github/EggShell/eggshell.py",
				"/home/brainfuck/Desktop/anubis/server.py",
				"/home/brainfuck/programming/projects/anubis/server.py",
				"/home/brainfuck/programming/programming_languages/bash/src/pomodoro.sh",
				"/home/brainfuck/.config/sublime-text-3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
				"/home/brainfuck/Desktop/i3-reserved.txt",
				"/home/brainfuck/ricing/dotfiles/dotfiles_kali_linux/.config/rofi/config",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/server/server.py",
				"/home/brainfuck/programming/projects/file_transfer/client.py",
				"/home/brainfuck/programming/projects/file_transfer/server.py",
				"/home/brainfuck/programming/projects/anubis-v0.1-dev_20171009a/docs/TODO_list.md",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/modules/testone.py",
				"/home/brainfuck/programming/programming_languages/python/cryptography/cryptotool-v1.1/src/cryptotool.py",
				"/home/brainfuck/programming/programming_languages/python/cryptography/cryptotool-v1.1/src/modules/hashes/md5Hash.py",
				"/home/brainfuck/programming/git/strongpass/strongpass.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/server.py",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/TODO_list.md",
				"/home/brainfuck/programming/projects/anubis-v0.1-dev_20170906a/server.py",
				"/home/brainfuck/Desktop/anubis-v0.1-dev_20170909a/client.py",
				"/home/brainfuck/programming/projects/rat_examples/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Python/Completion Rules.tmPreferences",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/Python.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/sublime_jedi.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/Compare Side-By-Side/SBSCompare.sublime-settings",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SBSCompare.sublime-settings",
				"/home/brainfuck/bin/pomodoro",
				"/home/brainfuck/Desktop/file_transfer/client.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/eggshell.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/shell/shell.py",
				"/home/brainfuck/programming/projects/rat_examples/EggShell/modules/commands/macOS/macos_download.py",
				"/home/brainfuck/Desktop/file_transfer/testonetosend.mp3",
				"/home/brainfuck/programming/programming_languages/python/src/file_transfer_client_server/server.py",
				"/home/brainfuck/programming/programming_languages/python/src/file_transfer_client_server/client.py",
				"/home/brainfuck/Desktop/file_transfer_client_server/client.py",
				"/home/brainfuck/Desktop/file_transfer_client_server/server.py",
				"/home/brainfuck/Desktop/woof.py",
				"/home/brainfuck/Desktop/anubis/TODO_list.md",
				"/home/brainfuck/Desktop/get_file/server.py",
				"/home/brainfuck/Desktop/get_file/client.py",
				"/home/brainfuck/Desktop/pomodoros.txt",
				"/home/brainfuck/Desktop/Turtle/Multiple_Clients/client.py",
				"/home/brainfuck/Desktop/Turtle/Single_Client/client.py",
				"/home/brainfuck/Desktop/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/Desktop/testone_da_inviare.txt",
				"/home/brainfuck/programming/programming_languages/python/src/File.py",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
				"/home/brainfuck/programming/programming_languages/python/sending-a-file-over-tcp-sockets-in-python.pdf",
				"/home/brainfuck/programming/programming_languages/python/src/chunks/File.py",
				"/home/brainfuck/programming/projects/rat_examples/Stitch/PyLib/download.py",
				"/home/brainfuck/.codeintel/README.txt",
				"/home/brainfuck/programming/programming_languages/python/src/chunks/socket_file.py",
				"/home/brainfuck/programming/projects/i3-config/rofi/config",
				"/home/brainfuck/programming/git/i3-config/i3/i3blocks.conf",
				"/home/brainfuck/programming/git/i3-config/i3/config",
				"/home/brainfuck/programming/git/i3-config/README.md",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.bash_profile",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.config/cherrytree/config.cfg",
				"/home/brainfuck/ricing/dotfiles/dotfiles_arch_linux/.bash_aliases",
				"/home/brainfuck/.config/zathura/zathurarc",
				"/home/brainfuck/Desktop/anubis/README.md",
				"/home/brainfuck/programming/projects/anubis/client.py",
				"/home/brainfuck/Desktop/OSINT-Resources.md",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/bash-header.sublime-snippet",
				"/home/brainfuck/.config/sublime-text-3/Packages/User/python-header.sublime-snippet",
				"/home/brainfuck/Desktop/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-v3.5/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.5-dev/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.4.2/strongpass.py",
				"/home/brainfuck/programming/projects/strongpass-dev/strongpass-v3.2.1/strongpass.py",
				"/home/brainfuck/programming/projects/rat-dev/anubis/client.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/Turtle/Multiple_Clients/client.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/pupy/pupy/pupylib/PupyServer.py",
				"/home/brainfuck/programming/projects/rat-dev/rat_examples/pupy/pupy/pupysh.py",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Stitch/Application/stitch_cmd.py",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Stitch/main.py",
				"/home/brainfuck/programming/git/archtorify/archtorify.sh",
				"/home/brainfuck/programming/git/kalieraser/kalieraser.sh",
				"/home/brainfuck/programming/projects/RAT-dev/RAT-examples/Turtle/Multiple_Clients/server.py",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/cryptotool-v1.1/src/modules/hashes/sha256Hash.py",
				"/home/brainfuck/downloads/nordvpn/user_pass.txt",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/payloads.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/HighLighter.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/highLighter.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/TextParser.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/TextParser.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer2/dictio.py",
				"/home/brainfuck/programming/projects/webslayer-dev/webslayer/dictio.py",
				"/home/brainfuck/programming/projects/webslayer/payloads.py",
				"/home/brainfuck/programming/projects/webslayer/wfuzz.py",
				"/home/brainfuck/bin/rsync-backup",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/cryptotool-v1.1/src/cryptotool.py",
				"/home/brainfuck/programming/programming_languages/python/src/cryptography/hashtool-v0.7.0/hashtool.py",
				"/home/brainfuck/programming/projects/RAT-dev/Turtle/turtle.py",
				"/home/brainfuck/programming/dotfiles/dotfiles_void_linux/openbox/.config/openbox/autostart",
				"/home/brainfuck/programming/dotfiles/conky/conky_examples/11-conky.conf",
				"/home/brainfuck/Desktop/kalitorify/kalitorify.sh",
				"/home/brainfuck/Desktop/kalitorify/README.md",
				"/home/brainfuck/Desktop/kalitorify/Makefile",
				"/home/brainfuck/programming/projects/archtorify-dev/archtorify.sh",
				"/home/brainfuck/programming/projects/archtorify-dev/Makefile",
				"/home/brainfuck/programming/projects/kalitorify-dev/README.md",
				"/home/brainfuck/Desktop/anonsurf-master/Makefile",
				"/home/brainfuck/programming/programming_languages/bash/src/lib/mac_change.sh",
				"/home/brainfuck/Desktop/mac_change.sh",
				"/home/brainfuck/.config/xfce4/terminal/terminalrc",
				"/home/brainfuck/programming/projects/kalitorify-dev/kalitorify.sh",
				"/home/brainfuck/downloads/Surfn-master/README.md",
				"/home/brainfuck/shared/terminalrc",
				"/home/brainfuck/Desktop/change_hostname.sh",
				"/home/brainfuck/Desktop/anonsurf-master/anonsurf.sh",
				"/home/brainfuck/Desktop/anonsurf-master/torrc",
				"/home/brainfuck/Desktop/anonsurf-master/exitnode-selector",
				"/home/brainfuck/Desktop/anonsurf-master/exitnodes.csv",
				"/home/brainfuck/programming/git/kalitorify/README.md",
				"/home/brainfuck/Desktop/testone.sh",
				"/home/brainfuck/documents/guides/Arch-Linux-Installazione/Arch_Linux_Post_Installazione.txt",
				"/home/brainfuck/documents/guides/Arch-Linux-Installazione/Arch-Linux-02 - Configurazione.txt",
				"/home/brainfuck/Desktop/superfunk-conkyrc",
				"/home/brainfuck/programming/config_files/dots/conky-examples/conky.config",
				"/home/brainfuck/Desktop/bash-configs/debian-kali-linux/user/bashrc",
				"/home/brainfuck/programming/config_files/my_dots/void-linux-config/openbox/autostart",
				"/home/brainfuck/Desktop/sublime.settings",
				"/home/brainfuck/Desktop/sublime-settings"
			],
			"find":
			{
				"height": 54.0
			},
			"find_in_files":
			{
				"height": 136.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"accept_connections",
					"multiServerInteract",
					"multiServerListSessions",
					"Thread",
					"work",
					"create_workers()",
					"download",
					"except OSError as error:",
					"Legge dei Piccoli",
					"white",
					"#2277a3",
					"ebf8ff",
					"a7d8ef",
					"#9fcee4",
					"#98c5da",
					"#8db6ca",
					"#a2d0e7",
					"#99c4da",
					"#92bcd0",
					"#84aabd",
					"#7ea2b4",
					"73a2b5",
					"Roboto 8",
					"Terminus 9",
					"accept_connections",
					"serverHost",
					"cmdloop()",
					"anubis",
					"dog",
					"Queue",
					"queue",
					"enumerate",
					"turtle",
					"queue",
					"Queue()",
					"NUMBER_OF_THREADS",
					"strip",
					"enp0s25",
					"@payload",
					"encd",
					"dictionary",
					"request_generator",
					"launch",
					"request",
					"request_",
					"rh",
					"addHeader",
					"add_HEADER",
					"addHeader",
					"addPostdata",
					"request",
					"encoding",
					"'false'",
					"'true'",
					"no",
					"yes",
					"VERSION",
					"PROGRAM",
					"GIT_URL",
					"AUTHOR",
					"VERSION",
					"Abel",
					"wlan0",
					"gmnterm",
					" \n",
					"hide_chars",
					"hidechars",
					"hidewords",
					"hidelines",
					"hidecodes",
					"new_req",
					"line",
					"generate_request",
					"Request()",
					"rawrequest",
					"raw_req",
					"rawrequest",
					"GET",
					"You",
					".mp4",
					"checkip",
					"%-14s",
					"%-20s",
					"yellow",
					"client-id",
					"list_connections",
					"bcol",
					"bcolors",
					"srm",
					"\n time\nimport sys\nimport socket\nimport subprocess\nimport threading\nimport struct\nimport signal\nfrom queue import Queue\nfrom termcolor import colored as color\n\n\n# program info\n_AUTHOR = \"Brainfuck\"\n_VERSION = \"0.2.0\"\n\n\"\"\" Set threads and queue for manage multiple clients on server\n",
					"\n ",
					"import",
					"error",
					"sync",
					"B",
					"[F",
					"[E",
					"[D",
					"[C",
					"[B",
					"[A",
					"A",
					"self.socket.send",
					"quit_gracefully",
					"archtorify",
					"stop",
					"Google",
					"01-29",
					"Failed",
					"[ failed ]",
					"2.4.1",
					"stop",
					"OK",
					"failed",
					"1.6.5",
					"md5",
					"shut",
					"failed",
					"header",
					"jpg",
					"page",
					"page-",
					"page-scroll",
					"page",
					"#",
					"page-top",
					".full",
					"full"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
					"except OSError as err:",
					"Legge di Little",
					"#1f6b93",
					"ffffff",
					"ade0f8",
					"#a7d8ef",
					"#9fcee4",
					"#98c5da",
					"#8db6ca",
					"#a2d0e7",
					"#99c4da",
					"#92bcd0",
					"#84aabd",
					"84aabd",
					"Roboto 9",
					"Roboto 8",
					"requestGenerator",
					"false",
					"true,",
					"'false',",
					"'true',",
					"version",
					"program",
					"git_url",
					"author",
					"version",
					"Terminus",
					"enp2s8",
					"Terminus",
					"hide_chars",
					"hide_words",
					"hide_lines",
					"hide_codes",
					"new_request",
					"%-12s",
					"%-14s",
					"enum_listening",
					"col",
					"color",
					"bcol",
					"kalitorify",
					"[FAILED]",
					"2.4.2-dev",
					"FAILED",
					"1.7.0",
					"lol",
					"IFS=$' '",
					"January 2017",
					"color1",
					"teal",
					"color1",
					"package",
					"green",
					"blue",
					"yellow",
					"green",
					"red",
					"#009688",
					"#607d8b",
					"#009688",
					"rgba(0,150,136,0.7)",
					"#2196f3",
					"#64b5f6",
					"#42a5f5",
					"\"",
					"24",
					"arial",
					"monospace",
					"terminus",
					"#ECEFF1",
					"#455A64",
					"#ECEFF1",
					"#2A373E",
					"#3E515A",
					"#b0bec5",
					"#78909c",
					"#00bcd4",
					"#4dd0e1",
					"#80cbc4",
					"#4db6ac",
					"#80cbc4",
					"#26a69a",
					"#26c6da",
					"#00acc1",
					"#4fc3f7",
					"#0277bd",
					"#00b3b3",
					"#003333",
					"#008080",
					"#004d4d",
					"#008080",
					"#00b3b3",
					"#cccccc",
					"#00cc00",
					"grey",
					"lightgrey",
					"#8e9aa4",
					"#65737e",
					"#ce4bc1",
					"#b431a7",
					"#77216f",
					"#2c001e",
					"#61afef",
					".",
					"°",
					"",
					"remote_addr",
					"portno",
					"{white}",
					"{endc}",
					"{green}",
					"{cyan}",
					"printf",
					"Times New Roman",
					"Tahoma",
					"/home/$username/backups",
					"enp0s25",
					"white",
					"light grey",
					"#E6E6E6",
					"#98D1CE",
					"white",
					"endc",
					"/"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": true,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 30.0
			},
			"input":
			{
				"height": 80.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"output.markdown":
			{
				"height": 144.0
			},
			"output.unsaved_changes":
			{
				"height": 138.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,0,0,0,0,1680,1050",
			"replace":
			{
				"height": 94.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"core.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 159.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 192
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/home/brainfuck/programming/projects/webslayer2.sublime-workspace",
			"/home/brainfuck/programming/projects/webslayer2/webslayer2.sublime-workspace"
		]
	}
}
